<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="echo.sp.app.dao.UserOrderDAO">

	<insert id="addOrderHead" parameterType="map">
	    INSERT INTO T_ORDERS(ORDER_ID,MERCHANT_ID,USER_ID,ORDER_TYPE,STATUS,ORDER_TIME,TOTAL_PAY)
        VALUES(#{ORDER_ID},#{MERCHANT_ID},#{USER_ID},#{ORDER_TYPE},'10',#{ORDER_TIME},#{TOTAL_PAY,jdbcType=NUMERIC})
    </insert>
    <insert id="addOrderLine" parameterType="java.util.List">
	   	INSERT INTO T_ORDERS_LINE(ORDER_ID,ITEM_ID,ITEM_NAME,QTY_SOLD,PAY_PRICE,SINGLE_PAY) VALUES
    	<foreach collection="list" item="itm" separator=",">
	       (#{itm.ORDER_ID},#{itm.ITEM_ID},#{itm.ITEM_NAME},
	        #{itm.QTY_SOLD,jdbcType=NUMERIC},
	        #{itm.PAY_PRICE,jdbcType=NUMERIC},
	        #{itm.SINGLE_PAY,jdbcType=NUMERIC})
	    </foreach>
 	</insert>
 	<update id="modifyItemQty" parameterType="java.util.List">  
	    <foreach collection="list" item="item" index="index" open="" close="" separator=";">
	        UPDATE T_ITEMS
	        <set>
	            INVENTORY = #{item.INVENTORY,jdbcType=NUMERIC},
	            QTY_SOLD = #{item.QTY_SOLD_REAL,jdbcType=NUMERIC}
	        </set>
	        WHERE ITEM_ID = #{item.ITEM_ID}
	    </foreach>  
	</update>
 	
 	
 	<select id="getOrderHead" parameterType="map" resultType="Map">
    	SELECT ORDER_ID,MERCHANT_ID,USER_ID,ORDER_TYPE,STATUS,
        PAY_TYPE,TOTAL_PAY,ORDER_ALIAS_ID,CAPTCHA,ORDER_TIME,CANCEL_TIME,
        PAY_TIME,BACK_TIME,CONSUME_TIME,SHUT_TIME,DEL_TIME,CANCEL_TYPE,
        CANCEL_REASON,BACK_REASON,COMM_STATUS,NOTE
    	FROM T_ORDERS WHERE ORDER_ID = #{ORDER_ID}
    </select>
    <select id="getOrderLine" parameterType="map" resultType="Map">
    	SELECT * FROM T_ORDERS_LINE WHERE ORDER_ID = #{ORDER_ID}
    </select>
    
    <update id="updateOrderForCancel" parameterType="map">  
          UPDATE T_ORDERS SET 
          STATUS = '20',
          CANCEL_TIME = #{CANCEL_TIME},
          CANCEL_TYPE = #{CANCEL_TYPE},
          CANCEL_REASON = #{CANCEL_REASON} 
          WHERE ORDER_ID = #{ORDER_ID}
    </update> 
    
    
    <insert id="insertToWxLog" parameterType="map">
	    INSERT INTO T_WX_PAY_LOG(ORDER_ID,TRANSACTION_ID,OUT_TRADE_NO,OPENID,
	    	CASH_FEE,TOTAL_FEE,RESULT_CODE,RETURN_CODE,TIME_END)
        VALUES(#{ORDER_ID},#{TRANSACTION_ID},#{OUT_TRADE_NO},#{OPENID},
        	#{CASH_FEE,jdbcType=NUMERIC},#{TOTAL_FEE,jdbcType=NUMERIC},
        	#{RESULT_CODE},#{RETURN_CODE},#{TIME_END})
    </insert>
    <insert id="insertToAliLog" parameterType="map">
	    INSERT INTO T_ALI_PAY_LOG(ORDER_ID,TRADE_NO,OUT_TRADE_NO,BUYER_EMAIL,
	    	BUYER_ID,SELLER_ID,SUBJECT,TOTAL_FEE,DISCOUNT,USE_COUPON,TRADE_STATUS,
	    	NOTIFY_TYPE,GMT_CREATE)
        VALUES(#{ORDER_ID},#{TRADE_NO},#{OUT_TRADE_NO},#{BUYER_EMAIL},
        	#{BUYER_ID},#{SELLER_ID},#{SUBJECT},#{TOTAL_FEE,jdbcType=NUMERIC},#{DISCOUNT,jdbcType=NUMERIC},
        	#{USE_COUPON},#{TRADE_STATUS},#{NOTIFY_TYPE},#{GMT_CREATE})
    </insert>
    <insert id="insertToUnLog" parameterType="map">
	    INSERT INTO T_UN_PAY_LOG(ORDER_ID,QUERYID,TRACENO,OUT_TRADE_NO,
	    	TXNAMT,RESPMSG,RESPCODE,TXNTIME)
        VALUES(#{ORDER_ID},#{QUERYID},#{TRACENO},#{OUT_TRADE_NO},
        	#{TXNAMT,jdbcType=NUMERIC},#{RESPMSG},#{RESPCODE},#{TXNTIME})
    </insert>
    <insert id="insertToPayLog" parameterType="map">
	    INSERT INTO T_ORDERS_PAY_LOG(ORDER_ID,TRANS_ID,TRANS_TYPE,PAY_TYPE,
	    	TOTAL_PAYMENT,TIME_STAMP)
        VALUES(#{ORDER_ID},#{TRANS_ID},#{TRANS_TYPE},#{PAY_TYPE},
        	#{TOTAL_PAYMENT,jdbcType=NUMERIC},#{TIME_STAMP})
    </insert>
    <update id="updateOrderPay" parameterType="map">  
          UPDATE T_ORDERS SET 
          STATUS = #{STATUS},
          PAY_TYPE = #{PAY_TYPE},
          ORDER_ALIAS_ID = #{ORDER_ALIAS_ID},
          CAPTCHA = #{CAPTCHA},
          PAY_TIME = #{PAY_TIME}
          WHERE ORDER_ID = #{ORDER_ID}
    </update> 
    <update id="updateOrderPayBack" parameterType="map">  
          UPDATE T_ORDERS SET 
          STATUS = #{STATUS},
          BACK_TIME = #{BACK_TIME}
          WHERE ORDER_ID = #{ORDER_ID}
    </update> 
</mapper>